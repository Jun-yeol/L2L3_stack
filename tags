!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/root/project/TcpIp_stack/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
${CLILIB}	CommandParser/Makefile	/^${CLILIB}: ${OBJ}$/;"	t
${LIBNAME}	gluethread/Makefile	/^${LIBNAME}:glthread.o$/;"	t
ACCESS	net.h	/^	ACCESS,$/;"	e	enum:__anon0ffedda20103
ALLOC_ETH_HDR_WITH_PAYLOAD	Layer2/layer2.h	/^ALLOC_ETH_HDR_WITH_PAYLOAD(char *pkt, unsigned int pkt_size){$/;"	f	typeref:typename:ethernet_hdr_t *
ANSI_COLOR_BLUE	CommandParser/css.h	/^#define ANSI_COLOR_BLUE /;"	d
ANSI_COLOR_CYAN	CommandParser/css.h	/^#define ANSI_COLOR_CYAN /;"	d
ANSI_COLOR_GREEN	CommandParser/css.h	/^#define ANSI_COLOR_GREEN /;"	d
ANSI_COLOR_MAGENTA	CommandParser/css.h	/^#define ANSI_COLOR_MAGENTA /;"	d
ANSI_COLOR_RED	CommandParser/css.h	/^#define ANSI_COLOR_RED /;"	d
ANSI_COLOR_RESET	CommandParser/css.h	/^#define ANSI_COLOR_RESET /;"	d
ANSI_COLOR_YELLOW	CommandParser/css.h	/^#define ANSI_COLOR_YELLOW /;"	d
ARP_BROAD_REQ	tcpconst.h	/^#define ARP_BROAD_REQ	/;"	d
ARP_MSG	tcpconst.h	/^#define ARP_MSG	/;"	d
ARP_REPLY	tcpconst.h	/^#define ARP_REPLY	/;"	d
BASE	CommandParser/gluethread/glthread.h	/^#define BASE(/;"	d
BASE	gluethread/glthread.h	/^#define BASE(/;"	d
BOOLEAN	CommandParser/libcliid.h	/^    BOOLEAN,$/;"	e	enum:__anon26ae4bf20203
BROADCAST_MAC	tcpconst.h	/^#define BROADCAST_MAC	/;"	d
CC	CommandParser/Makefile	/^CC=gcc$/;"	m
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	CommandParser/Makefile	/^CFLAGS=-g -Wall$/;"	m
CFLAGS	Makefile	/^CFLAGS=-g$/;"	m
CHILDREN_END_INDEX	CommandParser/cliconst.h	/^#define CHILDREN_END_INDEX /;"	d
CHILDREN_START_INDEX	CommandParser/cliconst.h	/^#define CHILDREN_START_INDEX /;"	d
CLEAR_SCR_STRING	CommandParser/cliconst.h	/^#define CLEAR_SCR_STRING /;"	d
CLILIB	CommandParser/Makefile	/^CLILIB=libcli.a$/;"	m
CLI_VAL_RC	CommandParser/clistd.h	/^} CLI_VAL_RC;$/;"	t	typeref:enum:__anon360053990103
CMD	CommandParser/cmd_hier.h	/^    CMD,$/;"	e	enum:__anon6f8514110103
CMDCODE	CommandParser/cmd_hier.h	/^    int CMDCODE;$/;"	m	struct:_param_t_	typeref:typename:int
CMDCODE_DEBUG_UT	CommandParser/cliconst.h	/^#define CMDCODE_DEBUG_UT /;"	d
CMDCODE_RUN_UT_TC	CommandParser/cliconst.h	/^#define CMDCODE_RUN_UT_TC /;"	d
CMDCODE_SHOW_NODE_ARP_TABLE	cmdcodes.h	/^#define CMDCODE_SHOW_NODE_ARP_TABLE	/;"	d
CMDCODE_SHOW_NODE_MAC_TABLE	cmdcodes.h	/^#define CMDCODE_SHOW_NODE_MAC_TABLE	/;"	d
CMDCODE_SHOW_NODE_RT_TABLE	cmdcodes.h	/^#define CMDCODE_SHOW_NODE_RT_TABLE	/;"	d
CMDCODE_SHOW_NW_TOPOLOGY	cmdcodes.h	/^#define CMDCODE_SHOW_NW_TOPOLOGY	/;"	d
CMDODE_CONFIG_NODE_LOOPBACK	CommandParser/main4.c	/^#define CMDODE_CONFIG_NODE_LOOPBACK /;"	d	file:
CMDODE_SHOW_NODE	CommandParser/main2.c	/^#define CMDODE_SHOW_NODE /;"	d	file:
CMDODE_SHOW_NODE	CommandParser/main3.c	/^#define CMDODE_SHOW_NODE /;"	d	file:
CMDODE_SHOW_NODE	CommandParser/main4.c	/^#define CMDODE_SHOW_NODE /;"	d	file:
CMDODE_SHOW_NODE_LOOPBACK	CommandParser/main2.c	/^#define CMDODE_SHOW_NODE_LOOPBACK /;"	d	file:
CMDODE_SHOW_NODE_LOOPBACK	CommandParser/main3.c	/^#define CMDODE_SHOW_NODE_LOOPBACK /;"	d	file:
CMDODE_SHOW_NODE_LOOPBACK	CommandParser/main4.c	/^#define CMDODE_SHOW_NODE_LOOPBACK /;"	d	file:
CMD_EXPANSION_CHARACTER	CommandParser/cliconst.h	/^#define CMD_EXPANSION_CHARACTER /;"	d
CMD_EXPANSION_INDEX	CommandParser/cliconst.h	/^#define CMD_EXPANSION_INDEX /;"	d
CMD_HIST_RECORD_FILE	CommandParser/cliconst.h	/^#define CMD_HIST_RECORD_FILE /;"	d
CMD_NAME_SIZE	CommandParser/cliconst.h	/^#define CMD_NAME_SIZE /;"	d
CMD_NOT_FOUND	CommandParser/cliconst.h	/^    CMD_NOT_FOUND,$/;"	e	enum:__anondcf10b350203
CMD_PARSE_STATUS	CommandParser/cliconst.h	/^} CMD_PARSE_STATUS;$/;"	t	typeref:enum:__anondcf10b350203
COMPLETE	CommandParser/cliconst.h	/^    COMPLETE,$/;"	e	enum:__anondcf10b350203
CONFIG_CONSOLEN_NAME_NAME	CommandParser/cliconst.h	/^#define CONFIG_CONSOLEN_NAME_NAME /;"	d
CONFIG_DISABLE	CommandParser/libcliid.h	/^    CONFIG_DISABLE,$/;"	e	enum:__anon26ae4bf20103
CONFIG_ENABLE	CommandParser/libcliid.h	/^    CONFIG_ENABLE,$/;"	e	enum:__anon26ae4bf20103
CONFIG_LOAD_FILE	CommandParser/cliconst.h	/^#define CONFIG_LOAD_FILE	/;"	d
CONFIG_SUPPORTSAVE_ENABLE	CommandParser/cliconst.h	/^#define CONFIG_SUPPORTSAVE_ENABLE /;"	d
CONS_INPUT_BUFFER_SIZE	CommandParser/cliconst.h	/^#define CONS_INPUT_BUFFER_SIZE /;"	d
CommandParser	CommandParser/README.md	/^# CommandParser$/;"	c
CommandParser/libcli.a	Makefile	/^CommandParser\/libcli.a:$/;"	t
DEBUG_SHOW_CMDTREE	CommandParser/cliconst.h	/^#define DEBUG_SHOW_CMDTREE /;"	d
DEFAULT_DEVICE_NAME	CommandParser/cliconst.h	/^#define DEFAULT_DEVICE_NAME /;"	d
DO	CommandParser/cliconst.h	/^#define DO /;"	d
ERROR	CommandParser/cliconst.h	/^    ERROR,$/;"	e	enum:__anondcf10b350203
ETH_FCS	Layer2/layer2.h	/^#define ETH_FCS(/;"	d
ETH_HDR_SIZE_EXCL_PAYLOAD	Layer2/layer2.h	/^#define ETH_HDR_SIZE_EXCL_PAYLOAD /;"	d
EXTRACT_CMD_CODE	CommandParser/cmdtlv.h	/^#define EXTRACT_CMD_CODE(/;"	d
FALSE	utils.h	/^	FALSE,$/;"	e	enum:__anon485cffec0103
FCS	Layer2/layer2.h	/^	unsigned int FCS;$/;"	m	struct:ethernet_hdr_	typeref:typename:unsigned int
FILE_CMD_SIZE_MAX	CommandParser/cliconst.h	/^#define FILE_CMD_SIZE_MAX /;"	d
FLOAT	CommandParser/libcliid.h	/^    FLOAT,$/;"	e	enum:__anon26ae4bf20203
GET_CMD_NAME	CommandParser/cmd_hier.h	/^#define GET_CMD_NAME(/;"	d
GET_ETHERNET_HDR_PAYLOAD	Layer2/layer2.h	/^#define GET_ETHERNET_HDR_PAYLOAD(/;"	d
GET_LEAF_ID	CommandParser/cmd_hier.h	/^#define GET_LEAF_ID(/;"	d
GET_LEAF_TYPE	CommandParser/cmd_hier.h	/^#define GET_LEAF_TYPE(/;"	d
GET_LEAF_TYPE_STR	CommandParser/cmd_hier.h	/^#define GET_LEAF_TYPE_STR(/;"	d
GET_LEAF_VALUE_PTR	CommandParser/cmd_hier.h	/^#define GET_LEAF_VALUE_PTR(/;"	d
GET_PARAM_CMD	CommandParser/cmd_hier.h	/^#define GET_PARAM_CMD(/;"	d
GET_PARAM_HELP_STRING	CommandParser/cmd_hier.h	/^#define GET_PARAM_HELP_STRING(/;"	d
GET_PARAM_LEAF	CommandParser/cmd_hier.h	/^#define GET_PARAM_LEAF(/;"	d
GLTHREAD_GET_USER_DATA_FROM_OFFSET	CommandParser/gluethread/glthread.h	/^#define GLTHREAD_GET_USER_DATA_FROM_OFFSET(/;"	d
GLTHREAD_GET_USER_DATA_FROM_OFFSET	gluethread/glthread.h	/^#define GLTHREAD_GET_USER_DATA_FROM_OFFSET(/;"	d
GLTHREAD_TO_STRUCT	CommandParser/gluethread/glthread.h	/^#define GLTHREAD_TO_STRUCT(/;"	d
GLTHREAD_TO_STRUCT	gluethread/glthread.h	/^#define GLTHREAD_TO_STRUCT(/;"	d
GL_FD_OUT	CommandParser/clistd.c	/^int GL_FD_OUT = STDOUT_FILENO;$/;"	v	typeref:typename:int
GOTO_ONE_LVL_UP_STRING	CommandParser/cliconst.h	/^#define GOTO_ONE_LVL_UP_STRING /;"	d
GOTO_TOP_STRING	CommandParser/cliconst.h	/^#define GOTO_TOP_STRING /;"	d
HIDE_PARAM	CommandParser/libcli.h	/^#define HIDE_PARAM(/;"	d
How to make use of this Library in your projects :	CommandParser/README.md	/^How to make use of this Library in your projects :$/;"	c
IF_IP	net.h	/^#define IF_IP(/;"	d
IF_L2_MODE	net.h	/^#define IF_L2_MODE(/;"	d
IF_MAC	net.h	/^#define IF_MAC(/;"	d
IF_NAME_SIZE	graph.h	/^#define IF_NAME_SIZE /;"	d
INCLUDES	CommandParser/Makefile	/^INCLUDES=-I .$/;"	m
INCOMPLETE_COMMAND	CommandParser/cliconst.h	/^    INCOMPLETE_COMMAND,$/;"	e	enum:__anondcf10b350203
INT	CommandParser/libcliid.h	/^    INT,$/;"	e	enum:__anon26ae4bf20203
INVALID	CommandParser/libcliid.h	/^    INVALID,$/;"	e	enum:__anon26ae4bf20203
INVALID_LEAF	CommandParser/cliconst.h	/^    INVALID_LEAF,$/;"	e	enum:__anondcf10b350203
INVOKE_APPLICATION_CALLBACK_HANDLER	CommandParser/cmd_hier.h	/^#define INVOKE_APPLICATION_CALLBACK_HANDLER(/;"	d
INVOKE_LEAF_LIB_VALIDATION_CALLBACK	CommandParser/cmd_hier.h	/^#define INVOKE_LEAF_LIB_VALIDATION_CALLBACK(/;"	d
INVOKE_LEAF_USER_VALIDATION_CALLBACK	CommandParser/cmd_hier.h	/^INVOKE_LEAF_USER_VALIDATION_CALLBACK(param_t *param, char *leaf_value) {$/;"	f	typeref:typename:int
IPV4	CommandParser/libcliid.h	/^    IPV4,$/;"	e	enum:__anon26ae4bf20203
IPV6	CommandParser/libcliid.h	/^    IPV6,$/;"	e	enum:__anon26ae4bf20203
IS_APPLICATION_CALLBACK_HANDLER_REGISTERED	CommandParser/cmd_hier.h	/^#define IS_APPLICATION_CALLBACK_HANDLER_REGISTERED(/;"	d
IS_CURRENT_MODE_CLEAR	CommandParser/cmd_hier.h	/^#define IS_CURRENT_MODE_CLEAR(/;"	d
IS_CURRENT_MODE_CONFIG	CommandParser/cmd_hier.h	/^#define IS_CURRENT_MODE_CONFIG(/;"	d
IS_CURRENT_MODE_DEBUG	CommandParser/cmd_hier.h	/^#define IS_CURRENT_MODE_DEBUG(/;"	d
IS_CURRENT_MODE_SHOW	CommandParser/cmd_hier.h	/^#define IS_CURRENT_MODE_SHOW(/;"	d
IS_GLTHREAD_LIST_EMPTY	CommandParser/gluethread/glthread.h	/^#define IS_GLTHREAD_LIST_EMPTY(/;"	d
IS_GLTHREAD_LIST_EMPTY	gluethread/glthread.h	/^#define IS_GLTHREAD_LIST_EMPTY(/;"	d
IS_INTF_L3_MODE	net.h	/^#define IS_INTF_L3_MODE(/;"	d
IS_LEAF_USER_VALIDATION_CALLBACK_REGISTERED	CommandParser/cmd_hier.h	/^#define IS_LEAF_USER_VALIDATION_CALLBACK_REGISTERED(/;"	d
IS_MAC_BROADCAST_ADDR	utils.h	/^#define IS_MAC_BROADCAST_ADDR(/;"	d
IS_MAC_TABLE_ENTRY_EQUAL	Layer2/l2switch.c	/^#define IS_MAC_TABLE_ENTRY_EQUAL(/;"	d	file:
IS_PARAM_CMD	CommandParser/cmd_hier.h	/^#define IS_PARAM_CMD(/;"	d
IS_PARAM_HIDDEN	CommandParser/libcli.h	/^#define IS_PARAM_HIDDEN(/;"	d
IS_PARAM_LEAF	CommandParser/cmd_hier.h	/^#define IS_PARAM_LEAF(/;"	d
IS_PARAM_MODE_ENABLE	CommandParser/cmd_hier.h	/^#define IS_PARAM_MODE_ENABLE(/;"	d
IS_PARAM_NO_CMD	CommandParser/cmd_hier.h	/^#define IS_PARAM_NO_CMD(/;"	d
IS_PARAM_SUBOPTIONS_ENABLE	CommandParser/cmd_hier.h	/^#define IS_PARAM_SUBOPTIONS_ENABLE(/;"	d
IS_QUEUED_UP_IN_THREAD	CommandParser/gluethread/glthread.h	/^#define IS_QUEUED_UP_IN_THREAD(/;"	d
ITERATE_GLTHREAD_BEGIN	CommandParser/gluethread/glthread.h	/^#define ITERATE_GLTHREAD_BEGIN(/;"	d
ITERATE_GLTHREAD_BEGIN	gluethread/glthread.h	/^#define ITERATE_GLTHREAD_BEGIN(/;"	d
ITERATE_GLTHREAD_END	CommandParser/gluethread/glthread.h	/^#define ITERATE_GLTHREAD_END(/;"	d
ITERATE_GLTHREAD_END	gluethread/glthread.h	/^#define ITERATE_GLTHREAD_END(/;"	d
L2_MODE_UNKNOWN	net.h	/^	L2_MODE_UNKNOWN$/;"	e	enum:__anon0ffedda20103
LEAF	CommandParser/cmd_hier.h	/^    LEAF,$/;"	e	enum:__anon6f8514110103
LEAF_ID_SIZE	CommandParser/cliconst.h	/^#define LEAF_ID_SIZE /;"	d
LEAF_MAX	CommandParser/libcliid.h	/^    LEAF_MAX$/;"	e	enum:__anon26ae4bf20203
LEAF_VALUE_HOLDER_SIZE	CommandParser/cliconst.h	/^#define LEAF_VALUE_HOLDER_SIZE /;"	d
LIBNAME	gluethread/Makefile	/^LIBNAME=libglthread.a$/;"	m
LIBS	Makefile	/^LIBS=-lpthread -L .\/CommandParser -lcli$/;"	m
Layer2/l2switch.o	Makefile	/^Layer2\/l2switch.o:Layer2\/l2switch.c$/;"	t
Layer2/layer2.o	Makefile	/^Layer2\/layer2.o:Layer2\/layer2.c$/;"	t
MAX_CMD_TREE_DEPTH	CommandParser/cliconst.h	/^#define MAX_CMD_TREE_DEPTH /;"	d
MAX_INTF_PER_NODE	graph.h	/^#define MAX_INTF_PER_NODE /;"	d
MAX_MESSAGES	CommandParser/ut/utinfra/ut_parser.c	/^#define MAX_MESSAGES /;"	d	file:
MAX_MSG_SIZE	CommandParser/ut/utinfra/ut_parser.c	/^#define MAX_MSG_SIZE /;"	d	file:
MAX_OPTION_SIZE	CommandParser/cliconst.h	/^#define MAX_OPTION_SIZE /;"	d
MAX_PACKET_BUFFER_SIZE	comm.h	/^#define MAX_PACKET_BUFFER_SIZE /;"	d
MAX_SAVED_CMDS	CommandParser/cliconst.h	/^#define MAX_SAVED_CMDS /;"	d
MAX_VLAN_MEMBERSHIP	net.h	/^#define MAX_VLAN_MEMBERSHIP /;"	d
MIN	CommandParser/cmd_hier.h	/^#define MIN(/;"	d
MODE_CHARACTER	CommandParser/cliconst.h	/^#define MODE_CHARACTER /;"	d
MODE_PARAM_INDEX	CommandParser/cliconst.h	/^#define MODE_PARAM_INDEX /;"	d
MODE_UNKNOWN	CommandParser/libcliid.h	/^    MODE_UNKNOWN$/;"	e	enum:__anon26ae4bf20103
MTRACE_SOURCE	CommandParser/testapp.c	/^#define MTRACE_SOURCE /;"	d	file:
MTRACE_SOURCE_DEST	CommandParser/testapp.c	/^#define MTRACE_SOURCE_DEST /;"	d	file:
MTRACE_SOURCE_DEST_GROUP	CommandParser/testapp.c	/^#define MTRACE_SOURCE_DEST_GROUP /;"	d	file:
MTRACE_SOURCE_GROUP	CommandParser/testapp.c	/^#define MTRACE_SOURCE_GROUP /;"	d	file:
MULTIPLE_MATCHING_COMMANDS	CommandParser/cliconst.h	/^    MULTIPLE_MATCHING_COMMANDS,$/;"	e	enum:__anondcf10b350203
NEGATE_CHARACTER	CommandParser/cliconst.h	/^#define NEGATE_CHARACTER /;"	d
NODE_ARP_TABLE	net.h	/^#define NODE_ARP_TABLE(/;"	d
NODE_LO_ADDR	net.h	/^#define NODE_LO_ADDR(/;"	d
NODE_MAC_TABLE	net.h	/^#define NODE_MAC_TABLE(/;"	d
NODE_NAME_SIZE	graph.h	/^#define NODE_NAME_SIZE /;"	d
NO_CMD	CommandParser/cmd_hier.h	/^    NO_CMD$/;"	e	enum:__anon6f8514110103
OBJ	CommandParser/Makefile	/^OBJ=cmd_hier.o parser.o serialize.o string_util.o clistd.o clicbext.o gluethread\/glthread.o ut\//;"	m
OBJS	Makefile	/^OBJS=gluethread\/glthread.o	\\$/;"	m
OPERATIONAL	CommandParser/libcliid.h	/^    OPERATIONAL,$/;"	e	enum:__anon26ae4bf20103
PARAM_HELP_STRING_SIZE	CommandParser/cliconst.h	/^#define PARAM_HELP_STRING_SIZE /;"	d
POSSIBILITY_ARRAY_SIZE	CommandParser/cliconst.h	/^#define POSSIBILITY_ARRAY_SIZE /;"	d
PRINT_TABS	CommandParser/cmd_hier.h	/^#define PRINT_TABS(/;"	d
QUEUE_PERMISSIONS	CommandParser/ut/utinfra/ut_parser.c	/^#define QUEUE_PERMISSIONS /;"	d	file:
SERIALIZE_BUFFER_DEFAULT_SIZE	CommandParser/serialize.h	/^    #define SERIALIZE_BUFFER_DEFAULT_SIZE /;"	d
SHOW_EXTENSION_PARAM	CommandParser/cliconst.h	/^#define SHOW_EXTENSION_PARAM /;"	d
SHOW_EXTENSION_PARAM_BRIEF	CommandParser/cliconst.h	/^#define SHOW_EXTENSION_PARAM_BRIEF /;"	d
SHOW_EXTENSION_PARAM_DETAIL	CommandParser/cliconst.h	/^#define SHOW_EXTENSION_PARAM_DETAIL /;"	d
SHOW_EXTENSION_PARAM_EXTENSIVE	CommandParser/cliconst.h	/^#define SHOW_EXTENSION_PARAM_EXTENSIVE /;"	d
SHOW_HELP	CommandParser/cliconst.h	/^#define SHOW_HELP /;"	d
SHOW_HISTORY	CommandParser/cliconst.h	/^#define SHOW_HISTORY /;"	d
SHOW_HISTORY_N	CommandParser/cliconst.h	/^#define SHOW_HISTORY_N /;"	d
SHOW_REGISTERED_COMMANDS	CommandParser/cliconst.h	/^#define SHOW_REGISTERED_COMMANDS /;"	d
STRING	CommandParser/libcliid.h	/^    STRING,$/;"	e	enum:__anon26ae4bf20203
SUBOPTIONS_CHARACTER	CommandParser/cliconst.h	/^#define SUBOPTIONS_CHARACTER /;"	d
SUBOPTIONS_INDEX	CommandParser/cliconst.h	/^#define SUBOPTIONS_INDEX /;"	d
TARGET	CommandParser/Makefile	/^TARGET:exe ${CLILIB}$/;"	t
TARGET	Makefile	/^TARGET:test.exe$/;"	t
TARGET	gluethread/Makefile	/^TARGET:${LIBNAME} exe$/;"	t
TC_RUNNING	CommandParser/ut/utinfra/ut_parser.c	/^static bool TC_RUNNING = false;$/;"	v	typeref:typename:bool	file:
TERMINAL_NAME_SIZE	CommandParser/cliconst.h	/^#define TERMINAL_NAME_SIZE /;"	d
TLV_LOOP_BEGIN	CommandParser/cmdtlv.h	/^#define TLV_LOOP_BEGIN(/;"	d
TLV_LOOP_END	CommandParser/cmdtlv.h	/^#define TLV_LOOP_END /;"	d
TLV_MAX_BUFFER_SIZE	CommandParser/cliconst.h	/^#define TLV_MAX_BUFFER_SIZE /;"	d
TRUE	utils.h	/^	TRUE,$/;"	e	enum:__anon485cffec0103
TRUNK	net.h	/^	TRUNK,$/;"	e	enum:__anon0ffedda20103
UNKNOWN	CommandParser/cliconst.h	/^    UNKNOWN$/;"	e	enum:__anondcf10b350203
USER_INVALID_LEAF	CommandParser/cliconst.h	/^    USER_INVALID_LEAF,$/;"	e	enum:__anondcf10b350203
UT_PARSER_BUFF_MAX_SIZE	CommandParser/ut/utinfra/ut_parser.c	/^#define UT_PARSER_BUFF_MAX_SIZE /;"	d	file:
UT_PARSER_MSG_Q_FD	CommandParser/ut/utinfra/ut_parser.c	/^static int UT_PARSER_MSG_Q_FD; $/;"	v	typeref:typename:int	file:
VALIDATION_FAILED	CommandParser/clistd.h	/^    VALIDATION_FAILED = -1,$/;"	e	enum:__anon360053990103
VALIDATION_SUCCESS	CommandParser/clistd.h	/^    VALIDATION_SUCCESS$/;"	e	enum:__anon360053990103
_INVOKE_LEAF_USER_VALIDATION_CALLBACK	CommandParser/cmd_hier.h	/^#define _INVOKE_LEAF_USER_VALIDATION_CALLBACK(/;"	d
__CLICBEXTN__	CommandParser/clicbext.h	/^#define __CLICBEXTN__$/;"	d
__CLISTD__	CommandParser/clistd.h	/^#define __CLISTD__$/;"	d
__CMDTLV__H	CommandParser/cmdtlv.h	/^#define __CMDTLV__H$/;"	d
__CMD_HIER__	CommandParser/cmd_hier.h	/^#define __CMD_HIER__$/;"	d
__CSS__	CommandParser/css.h	/^#define __CSS__$/;"	d
__GLUETHREAD__	CommandParser/gluethread/glthread.h	/^#define __GLUETHREAD__$/;"	d
__LIBCLICONSTANTS__	CommandParser/cliconst.h	/^#define __LIBCLICONSTANTS__$/;"	d
__LIBCLIID__	CommandParser/libcliid.h	/^#define __LIBCLIID__$/;"	d
__LIBCLI__	CommandParser/libcli.h	/^#define __LIBCLI__$/;"	d
__SERIALIZE__	CommandParser/serialize.h	/^#define __SERIALIZE__$/;"	d
__STRING_UTIL__	CommandParser/string_util.h	/^#define __STRING_UTIL__$/;"	d
__anon0ffedda20103	net.h	/^typedef enum{$/;"	g
__anon26ae4bf20103	CommandParser/libcliid.h	/^typedef enum{$/;"	g
__anon26ae4bf20203	CommandParser/libcliid.h	/^typedef enum{$/;"	g
__anon360053990103	CommandParser/clistd.h	/^typedef enum{$/;"	g
__anon485cffec0103	utils.h	/^typedef enum{$/;"	g
__anon6f8514110103	CommandParser/cmd_hier.h	/^typedef enum{$/;"	g
__anondcf10b350103	CommandParser/cliconst.h	/^typedef enum{$/;"	g
__anondcf10b350203	CommandParser/cliconst.h	/^typedef enum{$/;"	g
_dump_one_cmd	CommandParser/cmd_hier.c	/^_dump_one_cmd(param_t *param, unsigned short tabs){$/;"	f	typeref:typename:void	file:
_glthread	CommandParser/gluethread/glthread.h	/^typedef struct _glthread{$/;"	s
_glthread	gluethread/glthread.h	/^typedef struct _glthread{$/;"	s
_network_start_pkt_receiver_thread	comm.c	/^_network_start_pkt_receiver_thread(void *arg){$/;"	f	typeref:typename:void *	file:
_param_t	CommandParser/cmd_hier.h	/^typedef union _param_t{$/;"	u
_param_t	CommandParser/cmd_hier.h	/^} _param_t;$/;"	t	typeref:union:_param_t
_param_t_	CommandParser/cmd_hier.h	/^struct _param_t_{$/;"	s
_person	CommandParser/gluethread/test.c	/^typedef struct _person{$/;"	s	file:
_person	gluethread/test.c	/^typedef struct _person{$/;"	s	file:
_pkt_receive	comm.c	/^static void _pkt_receive(node_t *receving_node,$/;"	f	typeref:typename:void	file:
_send_pkt_out	comm.c	/^_send_pkt_out(int sock_fd, char *pkt_data, unsigned int pkt_size,$/;"	f	typeref:typename:int	file:
a_str	CommandParser/string_util.c	/^static char a_str[CONS_INPUT_BUFFER_SIZE];$/;"	v	typeref:typename:char[]	file:
age	CommandParser/gluethread/test.c	/^    int age;$/;"	m	struct:_person	typeref:typename:int	file:
age	gluethread/test.c	/^	int age;$/;"	m	struct:_person	typeref:typename:int	file:
all	Makefile	/^all:$/;"	t
app_ctrlC_signal_handler	CommandParser/cmd_hier.c	/^void (*app_ctrlC_signal_handler)(void );$/;"	v	typeref:typename:void (*)(void)
apply_mask	utils.c	/^apply_mask(char *prefix, char mask, char *str_prefix) {$/;"	f	typeref:typename:void
arp_entries	Layer2/layer2.h	/^	glthread_t arp_entries;$/;"	m	struct:arp_table_	typeref:typename:glthread_t
arp_entry_	Layer2/layer2.h	/^typedef struct arp_entry_{$/;"	s
arp_entry_t	Layer2/layer2.h	/^} arp_entry_t;$/;"	t	typeref:struct:arp_entry_
arp_glue	Layer2/layer2.h	/^	glthread_t arp_glue;$/;"	m	struct:arp_entry_	typeref:typename:glthread_t
arp_handler	nwcli.c	/^arp_handler(param_t *param, ser_buff_t *tlv_buf,$/;"	f	typeref:typename:int	file:
arp_hdr_	Layer2/layer2.h	/^typedef struct arp_hdr_ {$/;"	s
arp_hdr_t	Layer2/layer2.h	/^} arp_hdr_t;$/;"	t	typeref:struct:arp_hdr_
arp_table	net.h	/^	arp_table_t *arp_table;$/;"	m	struct:node_nw_prop_	typeref:typename:arp_table_t *
arp_table_	Layer2/layer2.h	/^typedef struct arp_table_{$/;"	s
arp_table_entry_add	Layer2/layer2.c	/^arp_table_entry_add(arp_table_t *arp_table, arp_entry_t *arp_entry){$/;"	f	typeref:typename:bool_t
arp_table_lookup	Layer2/layer2.c	/^arp_table_lookup(arp_table_t *arp_table, char *ip_addr){$/;"	f	typeref:typename:arp_entry_t *
arp_table_t	Layer2/layer2.h	/^} arp_table_t;$/;"	t	typeref:struct:arp_table_
arp_table_t	net.h	/^typedef struct arp_table_ arp_table_t;$/;"	t	typeref:struct:arp_table_
arp_table_update_from_arp_reply	Layer2/layer2.c	/^arp_table_update_from_arp_reply(arp_table_t *arp_table,$/;"	f	typeref:typename:void
array_of_possibilities	CommandParser/parser.c	/^array_of_possibilities[POSSIBILITY_ARRAY_SIZE];$/;"	v	typeref:typename:param_t * []	file:
att_node	graph.h	/^	struct node_ *att_node; \/\/ owner node$/;"	m	struct:interface_	typeref:struct:node_ *
b	CommandParser/serialize.h	/^    void *b;$/;"	m	struct:serialized_buffer	typeref:typename:void *
bool_t	utils.h	/^} bool_t;$/;"	t	typeref:enum:__anon485cffec0103
boolean_validation_handler	CommandParser/clistd.c	/^boolean_validation_handler(leaf_t *leaf, char *value_passed){$/;"	f	typeref:typename:CLI_VAL_RC
brief	CommandParser/cliconst.h	/^    brief,$/;"	e	enum:__anondcf10b350103
build_cmd_tree_leaves_data	CommandParser/cmd_hier.c	/^build_cmd_tree_leaves_data(ser_buff_t *tlv_buff,\/*Output serialize buffer*\/$/;"	f	typeref:typename:void
build_first_topo	topologies.c	/^build_first_topo(){$/;"	f	typeref:typename:graph_t *
build_mode_console_name	CommandParser/cmd_hier.c	/^build_mode_console_name(param_t *dst_param){$/;"	f	typeref:typename:void
build_simple_l2_switch_topo	topologies.c	/^build_simple_l2_switch_topo(){$/;"	f	typeref:typename:graph_t *
build_tlv_buffer	CommandParser/parser.c	/^build_tlv_buffer(char **tokens, $/;"	f	typeref:typename:CMD_PARSE_STATUS	file:
callback	CommandParser/cmd_hier.h	/^    cmd_callback callback;$/;"	m	struct:_param_t_	typeref:typename:cmd_callback
checkpoint	CommandParser/serialize.h	/^    int checkpoint;$/;"	m	struct:serialized_buffer	typeref:typename:int
clean	CommandParser/Makefile	/^clean:$/;"	t
clean	Makefile	/^clean:$/;"	t
clean	gluethread/Makefile	/^clean:$/;"	t
clear	CommandParser/cmd_hier.c	/^static param_t clear;$/;"	v	typeref:typename:param_t	file:
clear_mac_table	Layer2/l2switch.c	/^clear_mac_table(mac_table_t *mac_table){$/;"	f	typeref:typename:void
clear_screen_handler	CommandParser/clistd.c	/^clear_screen_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
cli_out	CommandParser/ut/utinfra/ut_parser.c	/^cli_out(unsigned char *buff, size_t buff_size) {$/;"	f	typeref:typename:void
cli_register_ctrlC_handler	CommandParser/cmd_hier.c	/^cli_register_ctrlC_handler(void (*fn_ptr)(void )) {$/;"	f	typeref:typename:void
cli_terminate_handler	CommandParser/clistd.c	/^cli_terminate_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
clicbext.o	CommandParser/Makefile	/^clicbext.o:clicbext.c$/;"	t
clistd.o	CommandParser/Makefile	/^clistd.o:clistd.c$/;"	t
cmd	CommandParser/cmd_hier.h	/^    cmd_t *cmd;$/;"	m	union:_param_t	typeref:typename:cmd_t *
cmd	CommandParser/cmd_hier.h	/^typedef struct cmd{$/;"	s
cmd_callback	CommandParser/cmd_hier.h	/^typedef int (*cmd_callback)(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_diable);$/;"	t	typeref:typename:int (*)(param_t * param,ser_buff_t * tlv_buf,op_mode enable_or_diable)
cmd_expansion_param	CommandParser/cmd_hier.c	/^static param_t cmd_expansion_param;$/;"	v	typeref:typename:param_t	file:
cmd_hier.o	CommandParser/Makefile	/^cmd_hier.o:cmd_hier.c$/;"	t
cmd_name	CommandParser/cmd_hier.h	/^    char cmd_name[CMD_NAME_SIZE];$/;"	m	struct:cmd	typeref:typename:char[]
cmd_recording_enabled	CommandParser/parser.c	/^static bool cmd_recording_enabled = true;$/;"	v	typeref:typename:bool	file:
cmd_t	CommandParser/cmd_hier.h	/^} cmd_t;$/;"	t	typeref:struct:cmd
cmd_tree_cursor	CommandParser/cmd_hier.c	/^static param_t *cmd_tree_cursor = NULL;$/;"	v	typeref:typename:param_t *	file:
cmd_type	CommandParser/cmd_hier.h	/^    _param_t cmd_type;$/;"	m	struct:_param_t_	typeref:typename:_param_t
collect_supportsave_data	CommandParser/clicbext.c	/^collect_supportsave_data(){$/;"	f	typeref:typename:void
collect_tlv	CommandParser/cmdtlv.h	/^#define collect_tlv(/;"	d
comm.o	Makefile	/^comm.o:comm.c$/;"	t
command_code_tlv	CommandParser/parser.c	/^static tlv_struct_t command_code_tlv;$/;"	v	typeref:typename:tlv_struct_t	file:
command_parser	CommandParser/parser.c	/^command_parser(void){$/;"	f	typeref:typename:void
config	CommandParser/cmd_hier.c	/^static param_t config;$/;"	v	typeref:typename:param_t	file:
config_console_name_handler	CommandParser/clistd.c	/^config_console_name_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
config_mode_enter_handler	CommandParser/clistd.c	/^config_mode_enter_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
config_router_name_handler	CommandParser/testapp.c	/^config_router_name_handler(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
cons_input_buffer	CommandParser/parser.c	/^static char cons_input_buffer[CONS_INPUT_BUFFER_SIZE];$/;"	v	typeref:typename:char[]	file:
console_name	CommandParser/parser.c	/^char console_name[TERMINAL_NAME_SIZE];$/;"	v	typeref:typename:char[]
convert_ip_from_int_to_str	net.c	/^convert_ip_from_int_to_str(unsigned int ip_addr, char *output_buffer){$/;"	f	typeref:typename:void
convert_ip_from_str_to_int	net.c	/^convert_ip_from_str_to_int(char *ip_addr){$/;"	f	typeref:typename:unsigned int
copy_in_serialized_buffer_by_offset	CommandParser/serialize.c	/^void copy_in_serialized_buffer_by_offset(ser_buff_t *b, int size, char *value, int offset){$/;"	f	typeref:typename:void
cost	graph.h	/^	unsigned int cost;$/;"	m	struct:link_	typeref:typename:unsigned int
create_graph_node	graph.c	/^create_graph_node(graph_t *graph, char *node_name){$/;"	f	typeref:typename:node_t *
create_new_graph	graph.c	/^create_new_graph(char *topology_name){$/;"	f	typeref:typename:graph_t *
ctrlC_signal_handler	CommandParser/cmd_hier.c	/^ctrlC_signal_handler(int sig){$/;"	f	typeref:typename:void	file:
de_serialize_string	CommandParser/serialize.c	/^de_serialize_string(char *dest, ser_buff_t *b, int size){$/;"	f	typeref:typename:void
debug	CommandParser/cmd_hier.c	/^static param_t debug;$/;"	v	typeref:typename:param_t	file:
debug_show	CommandParser/cmd_hier.c	/^static param_t debug_show;$/;"	v	typeref:typename:param_t	file:
delete_arp_table_entry	Layer2/layer2.c	/^delete_arp_table_entry(arp_table_t *arp_table, char *ip_addr){$/;"	f	typeref:typename:void
delete_glthread_list	CommandParser/gluethread/glthread.c	/^delete_glthread_list(glthread_t *glthread_head){$/;"	f	typeref:typename:void
delete_glthread_list	gluethread/glthread.c	/^delete_glthread_list(glthread_t *base_glthread){$/;"	f	typeref:typename:void
delete_mac_table_entry	Layer2/l2switch.c	/^delete_mac_table_entry(mac_table_t *mac_table, char *mac){$/;"	f	typeref:typename:void
dequeue_glthread_first	CommandParser/gluethread/glthread.c	/^dequeue_glthread_first(glthread_t *base_glthread){$/;"	f	typeref:typename:glthread_t *
deserialize_primitive	CommandParser/serialize.h	/^#define deserialize_primitive(/;"	d
detail	CommandParser/cliconst.h	/^    detail,$/;"	e	enum:__anondcf10b350103
disp_callback	CommandParser/cmd_hier.h	/^    display_possible_values_callback disp_callback;$/;"	m	struct:_param_t_	typeref:typename:display_possible_values_callback
display_cmd_expansion_callback	CommandParser/clistd.c	/^display_cmd_expansion_callback(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
display_graph_nodes	nwcli.c	/^display_graph_nodes(param_t *param, ser_buff_t *tlv_buff){$/;"	f	typeref:typename:void
display_possible_values_callback	CommandParser/cmd_hier.h	/^typedef void (*display_possible_values_callback)(param_t *, ser_buff_t *);$/;"	t	typeref:typename:void (*)(param_t *,ser_buff_t *)
display_sub_options_callback	CommandParser/clistd.c	/^display_sub_options_callback(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
do_hook	CommandParser/cmd_hier.c	/^static param_t do_hook;$/;"	v	typeref:typename:param_t	file:
dst_ip	Layer2/layer2.h	/^	unsigned int dst_ip;$/;"	m	struct:arp_hdr_	typeref:typename:unsigned int
dst_mac	Layer2/layer2.h	/^	mac_add_t dst_mac;$/;"	m	struct:arp_hdr_	typeref:typename:mac_add_t
dst_mac	Layer2/layer2.h	/^	mac_add_t dst_mac;$/;"	m	struct:ethernet_hdr_	typeref:typename:mac_add_t
dump_all_commands	CommandParser/clistd.c	/^dump_all_commands(param_t *root, unsigned int index){$/;"	f	typeref:typename:void	file:
dump_arp_table	Layer2/layer2.c	/^dump_arp_table(arp_table_t *arp_table){$/;"	f	typeref:typename:void
dump_cmd_tree	CommandParser/cmd_hier.c	/^dump_cmd_tree(){$/;"	f	typeref:typename:void
dump_intf_props	net.c	/^void dump_intf_props(interface_t *interface){$/;"	f	typeref:typename:void
dump_mac_table	Layer2/l2switch.c	/^dump_mac_table(mac_table_t *mac_table){$/;"	f	typeref:typename:void
dump_node_nw_props	net.c	/^void dump_node_nw_props(node_t *node){$/;"	f	typeref:typename:void
dump_nw_graph	net.c	/^void dump_nw_graph(graph_t *graph){$/;"	f	typeref:typename:void
dump_tlv_serialized_buffer	CommandParser/cmdtlv.h	/^dump_tlv_serialized_buffer(ser_buff_t *tlv_ser_buff){$/;"	f	typeref:typename:void
enable_disable_validation_handler	CommandParser/clistd.c	/^enable_disable_validation_handler(char *value_passed){$/;"	f	typeref:typename:int
enable_show_extension_param_brief	CommandParser/cmd_hier.c	/^enable_show_extension_param_brief(param_t *param){$/;"	f	typeref:typename:void
end_cmd_handler	CommandParser/clistd.c	/^end_cmd_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
ethernet_hdr_	Layer2/layer2.h	/^typedef struct ethernet_hdr_ {$/;"	s
ethernet_hdr_t	Layer2/layer2.h	/^} ethernet_hdr_t;$/;"	t	typeref:struct:ethernet_hdr_
exe	CommandParser/Makefile	/^exe:testapp.o ${CLILIB}$/;"	t
exe	gluethread/Makefile	/^exe:test.o ${LIBNAME}$/;"	t
exit_cmd_handler	CommandParser/clistd.c	/^exit_cmd_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
extensive	CommandParser/cliconst.h	/^    extensive,$/;"	e	enum:__anondcf10b350103
file_cmsd_size	CommandParser/clistd.c	/^static char file_cmsd_size[FILE_CMD_SIZE_MAX];$/;"	v	typeref:typename:char[]	file:
find_matching_param	CommandParser/parser.c	/^find_matching_param(param_t **options, const char *cmd_name){$/;"	f	typeref:typename:param_t *
flags	net.h	/^	unsigned int flags;$/;"	m	struct:node_nw_prop_	typeref:typename:unsigned int
float_validation_handler	CommandParser/clistd.c	/^float_validation_handler(leaf_t *leaf, char *value_passed){$/;"	f	typeref:typename:CLI_VAL_RC
free_serialize_buffer	CommandParser/serialize.c	/^void free_serialize_buffer(ser_buff_t *b){$/;"	f	typeref:typename:void
get_child_array_ptr	CommandParser/cmd_hier.h	/^get_child_array_ptr(param_t *param){$/;"	f	typeref:typename:param_t **
get_cmd_tree_cursor	CommandParser/cmd_hier.c	/^get_cmd_tree_cursor(){$/;"	f	typeref:typename:param_t *
get_current_branch_hook	CommandParser/cmd_hier.c	/^get_current_branch_hook(param_t *current_param){$/;"	f	typeref:typename:param_t *
get_glthread_list_count	CommandParser/gluethread/glthread.c	/^get_glthread_list_count(glthread_t *glthread_head){$/;"	f	typeref:typename:unsigned int
get_glthread_list_count	gluethread/glthread.c	/^get_glthread_list_count(glthread_t *base_glthread){$/;"	f	typeref:typename:unsigned int
get_last_command	CommandParser/parser.c	/^get_last_command(){$/;"	f	typeref:typename:char *
get_nbr_node	graph.h	/^get_nbr_node(interface_t *interface){$/;"	f	typeref:typename:node_t *
get_next_udp_port_number	comm.c	/^get_next_udp_port_number(){$/;"	f	typeref:typename:unsigned int	file:
get_node_by_node_name	graph.h	/^get_node_by_node_name(graph_t *topo, char *node_name){$/;"	f	typeref:typename:node_t *
get_node_if_by_name	graph.h	/^get_node_if_by_name(node_t *node, char *if_name){$/;"	f	typeref:typename:interface_t *
get_node_intf_available_slot	graph.h	/^get_node_intf_available_slot(node_t *node){$/;"	f	typeref:typename:int
get_serialize_buffer_checkpoint_offset	CommandParser/serialize.c	/^get_serialize_buffer_checkpoint_offset(ser_buff_t *b){$/;"	f	typeref:typename:int
get_serialize_buffer_current_ptr	CommandParser/serialize.c	/^char* get_serialize_buffer_current_ptr(ser_buff_t *b){$/;"	f	typeref:typename:char *
get_serialize_buffer_current_ptr_offset	CommandParser/serialize.c	/^int get_serialize_buffer_current_ptr_offset(ser_buff_t *b){$/;"	f	typeref:typename:int
get_serialize_buffer_size	CommandParser/serialize.c	/^int  get_serialize_buffer_size(ser_buff_t *b){$/;"	f	typeref:typename:int
get_show_extension_type	CommandParser/cmd_hier.c	/^get_show_extension_type(ser_buff_t *b){$/;"	f	typeref:typename:show_ext_t
get_str_leaf_type	CommandParser/cmd_hier.c	/^get_str_leaf_type(leaf_type_t leaf_type){$/;"	f	typeref:typename:char *
get_token	CommandParser/string_util.c	/^get_token(unsigned int index){$/;"	f	typeref:typename:char *
glthread	CommandParser/gluethread/test.c	/^    glthread_t glthread;$/;"	m	struct:_person	typeref:typename:glthread_t	file:
glthread	gluethread/test.c	/^	glthread_t glthread;$/;"	m	struct:_person	typeref:typename:glthread_t	file:
glthread.o	gluethread/Makefile	/^glthread.o:glthread.c$/;"	t
glthread_add_before	CommandParser/gluethread/glthread.c	/^glthread_add_before(glthread_t *curr_glthread, glthread_t *new_glthread){$/;"	f	typeref:typename:void
glthread_add_before	gluethread/glthread.c	/^glthread_add_before(glthread_t *curr_glthread, glthread_t *new_glthread){$/;"	f	typeref:typename:void
glthread_add_last	CommandParser/gluethread/glthread.c	/^glthread_add_last(glthread_t *glthread_head, glthread_t *new_glthread){$/;"	f	typeref:typename:void
glthread_add_last	gluethread/glthread.c	/^glthread_add_last(glthread_t *base_glthread, glthread_t *new_glthread){$/;"	f	typeref:typename:void
glthread_add_next	CommandParser/gluethread/glthread.c	/^glthread_add_next(glthread_t *curr_glthread, glthread_t *new_glthread){$/;"	f	typeref:typename:void
glthread_add_next	gluethread/glthread.c	/^glthread_add_next(glthread_t *curr_glthread, glthread_t *new_glthread){$/;"	f	typeref:typename:void
glthread_priority_insert	CommandParser/gluethread/glthread.c	/^glthread_priority_insert(glthread_t *glthread_head, $/;"	f	typeref:typename:void
glthread_priority_insert	gluethread/glthread.c	/^glthread_priority_insert(glthread_t *base_glthread,$/;"	f	typeref:typename:void
glthread_t	CommandParser/gluethread/glthread.h	/^} glthread_t;$/;"	t	typeref:struct:_glthread
glthread_t	gluethread/glthread.h	/^}glthread_t;$/;"	t	typeref:struct:_glthread
glue	CommandParser/ut/utinfra/ut_parser.c	/^    glthread_t glue;$/;"	m	struct:tc_result_	typeref:typename:glthread_t	file:
gluethread/glthread.o	CommandParser/Makefile	/^gluethread\/glthread.o:gluethread\/glthread.c$/;"	t
gluethread/glthread.o	Makefile	/^gluethread\/glthread.o:gluethread\/glthread.c$/;"	t
go_one_level_up_cmd_tree	CommandParser/cmd_hier.c	/^go_one_level_up_cmd_tree(param_t *curr_cmd_tree_cursor){$/;"	f	typeref:typename:void
goto_top_of_cmd_tree	CommandParser/cmd_hier.c	/^goto_top_of_cmd_tree(param_t *curr_cmd_tree_cursor){$/;"	f	typeref:typename:void
graph.o	Makefile	/^graph.o:graph.c$/;"	t
graph_	graph.h	/^typedef struct graph_ {$/;"	s
graph_glue	graph.h	/^	glthread_t graph_glue;$/;"	m	struct:node_	typeref:typename:glthread_t
graph_t	graph.h	/^} graph_t;$/;"	t	typeref:struct:graph_
graph_t	net.h	/^typedef struct graph_ graph_t;$/;"	t	typeref:struct:graph_
grep	CommandParser/string_util.c	/^grep (char string[], int string_size, char pattern[]) {$/;"	f	typeref:typename:int
grep_pattern_validation	CommandParser/clistd.c	/^grep_pattern_validation(char *value_passed){$/;"	f	typeref:typename:int
hash_code	net.c	/^hash_code(void *ptr, unsigned int size){$/;"	f	typeref:typename:unsigned int	file:
help	CommandParser/cmd_hier.h	/^    char help[PARAM_HELP_STRING_SIZE];$/;"	m	struct:_param_t_	typeref:typename:char[]
hw_addr_len	Layer2/layer2.h	/^	char hw_addr_len;		\/* 6byte MAC *\/$/;"	m	struct:arp_hdr_	typeref:typename:char
hw_type	Layer2/layer2.h	/^	short hw_type;			\/* 이더넷 케이블*\/$/;"	m	struct:arp_hdr_	typeref:typename:short
if_name	graph.h	/^	char if_name[IF_NAME_SIZE];$/;"	m	struct:interface_	typeref:typename:char[]
init_arp_table	Layer2/layer2.c	/^init_arp_table(arp_table_t **arp_table){$/;"	f	typeref:typename:void
init_glthread	CommandParser/gluethread/glthread.c	/^init_glthread(glthread_t *glthread){$/;"	f	typeref:typename:void
init_glthread	gluethread/glthread.c	/^init_glthread(glthread_t *glthread){$/;"	f	typeref:typename:void
init_intf_nw_prop	net.h	/^init_intf_nw_prop(intf_nw_prop_t *intf_nw_props) {$/;"	f	typeref:typename:void
init_libcli	CommandParser/cmd_hier.c	/^init_libcli(){$/;"	f	typeref:typename:void
init_mac_table	Layer2/l2switch.c	/^init_mac_table(mac_table_t **mac_table){$/;"	f	typeref:typename:void
init_node_nw_prop	net.h	/^init_node_nw_prop(node_nw_prop_t *node_nw_prop) {$/;"	f	typeref:typename:void
init_param	CommandParser/cmd_hier.c	/^init_param(param_t *param,                               \/* pointer to static param_t variable*/;"	f	typeref:typename:void
init_serialized_buffer	CommandParser/serialize.c	/^init_serialized_buffer(ser_buff_t **b){$/;"	f	typeref:typename:void
init_serialized_buffer_of_defined_size	CommandParser/serialize.c	/^init_serialized_buffer_of_defined_size(ser_buff_t **b, int size){$/;"	f	typeref:typename:void
init_token_array	CommandParser/string_util.c	/^init_token_array(){$/;"	f	typeref:typename:void
init_udp_socket	comm.c	/^init_udp_socket(node_t *node){$/;"	f	typeref:typename:void
insert_link_between_two_nodes	graph.c	/^insert_link_between_two_nodes(node_t *node1,$/;"	f	typeref:typename:void
install	CommandParser/Makefile	/^install:$/;"	t
int_store1	CommandParser/ut/utinfra/ut_parser.c	/^static uint64_t int_store1, int_store2, int_store3;$/;"	v	typeref:typename:uint64_t	file:
int_store2	CommandParser/ut/utinfra/ut_parser.c	/^static uint64_t int_store1, int_store2, int_store3;$/;"	v	typeref:typename:uint64_t	file:
int_store3	CommandParser/ut/utinfra/ut_parser.c	/^static uint64_t int_store1, int_store2, int_store3;$/;"	v	typeref:typename:uint64_t	file:
int_validation_handler	CommandParser/clistd.c	/^int_validation_handler(leaf_t *leaf, char *value_passed){$/;"	f	typeref:typename:CLI_VAL_RC
interface_	graph.h	/^typedef struct interface_ {$/;"	s
interface_assign_mac_address	net.c	/^interface_assign_mac_address(interface_t *interface){$/;"	f	typeref:typename:void
interface_set_l2_mode	Layer2/layer2.c	/^interface_set_l2_mode(node_t *node, interface_t *intf, char* l2_mode_option){$/;"	f	typeref:typename:void
interface_t	graph.h	/^} interface_t;$/;"	t	typeref:struct:interface_
interface_t	net.h	/^typedef struct interface_ interface_t;$/;"	t	typeref:struct:interface_
intf	graph.h	/^	interface_t *intf[MAX_INTF_PER_NODE];$/;"	m	struct:node_	typeref:typename:interface_t * []
intf1	graph.h	/^	interface_t intf1;$/;"	m	struct:link_	typeref:typename:interface_t
intf2	graph.h	/^	interface_t intf2;$/;"	m	struct:link_	typeref:typename:interface_t
intf_l2_mode	net.h	/^	intf_l2_mode_t intf_l2_mode; \/*if IP-address is configured on this interface, then this should/;"	m	struct:intf_nw_prop_	typeref:typename:intf_l2_mode_t
intf_l2_mode_str	net.h	/^intf_l2_mode_str(intf_l2_mode_t intf_l2_mode){$/;"	f	typeref:typename:char *
intf_l2_mode_t	net.h	/^} intf_l2_mode_t;$/;"	t	typeref:enum:__anon0ffedda20103
intf_nw_prop_	net.h	/^typedef struct intf_nw_prop_ {$/;"	s
intf_nw_prop_t	net.h	/^} intf_nw_prop_t;$/;"	t	typeref:struct:intf_nw_prop_
intf_nw_props	graph.h	/^	intf_nw_prop_t intf_nw_props;$/;"	m	struct:interface_	typeref:typename:intf_nw_prop_t
ip_add	net.h	/^	ip_add_t ip_add;$/;"	m	struct:intf_nw_prop_	typeref:typename:ip_add_t
ip_add_	net.h	/^typedef struct ip_add_ {$/;"	s
ip_add_t	net.h	/^} ip_add_t;$/;"	t	typeref:struct:ip_add_
ip_addr	Layer2/layer2.h	/^	ip_add_t ip_addr;$/;"	m	struct:arp_entry_	typeref:typename:ip_add_t
ip_addr	net.h	/^	char ip_addr[16];$/;"	m	struct:ip_add_	typeref:typename:char[16]
ipv4_validation_handler	CommandParser/clistd.c	/^ipv4_validation_handler(leaf_t *leaf, char *value_passed){$/;"	f	typeref:typename:CLI_VAL_RC
ipv6_validation_handler	CommandParser/clistd.c	/^ipv6_validation_handler(leaf_t *leaf, char *value_passed){$/;"	f	typeref:typename:CLI_VAL_RC
is_cmd_string_match	CommandParser/cmd_hier.h	/^is_cmd_string_match(param_t *param,$/;"	f	typeref:typename:int
is_ipadd_config	net.h	/^	bool_t is_ipadd_config;		\/*Set to TRUE if ip add is configured, intf operates in L3 mode if ip/;"	m	struct:intf_nw_prop_	typeref:typename:bool_t
is_ipadd_config_backup	net.h	/^	bool_t is_ipadd_config_backup;$/;"	m	struct:intf_nw_prop_	typeref:typename:bool_t
is_lb_addr_config	net.h	/^	bool_t is_lb_addr_config;$/;"	m	struct:node_nw_prop_	typeref:typename:bool_t
is_number	CommandParser/string_util.c	/^is_number (char *string) {$/;"	f	typeref:typename:bool	file:
is_serialized_buffer_empty	CommandParser/serialize.c	/^is_serialized_buffer_empty(ser_buff_t *b){$/;"	f	typeref:typename:char
is_user_in_cmd_mode	CommandParser/cmd_hier.c	/^is_user_in_cmd_mode(){$/;"	f	typeref:typename:int
ishidden	CommandParser/cmd_hier.h	/^    char ishidden;$/;"	m	struct:_param_t_	typeref:typename:char
l2_frame_recv_qualify_on_interface	Layer2/layer2.h	/^l2_frame_recv_qualify_on_interface(interface_t *interface,$/;"	f	typeref:typename:bool_t
l2_switch_forward_frame	Layer2/l2switch.c	/^l2_switch_forward_frame(node_t *node, interface_t *recv_intf,$/;"	f	typeref:typename:void	file:
l2_switch_perform_mac_learning	Layer2/l2switch.c	/^l2_switch_perform_mac_learning(node_t *node, char *src_mac, char *if_name){$/;"	f	typeref:typename:void	file:
l2_switch_recv_frame	Layer2/l2switch.c	/^l2_switch_recv_frame(interface_t *interface,$/;"	f	typeref:typename:void
last_command_input_buffer	CommandParser/parser.c	/^static char last_command_input_buffer[CONS_INPUT_BUFFER_SIZE];$/;"	v	typeref:typename:char[]	file:
layer2_fill_with_broadcast_mac	utils.c	/^layer2_fill_with_broadcast_mac(char *mac_array){$/;"	f	typeref:typename:void
layer2_frame_recv	Layer2/layer2.c	/^layer2_frame_recv(node_t *node, interface_t *interface,$/;"	f	typeref:typename:void
lb_addr	net.h	/^	ip_add_t lb_addr; \/*loopback address of node *\/$/;"	m	struct:node_nw_prop_	typeref:typename:ip_add_t
leaf	CommandParser/cmd_hier.h	/^    leaf_t *leaf;$/;"	m	union:_param_t	typeref:typename:leaf_t *
leaf	CommandParser/cmd_hier.h	/^typedef struct leaf{$/;"	s
leaf_handler_array	CommandParser/cmd_hier.c	/^leaf_type_handler leaf_handler_array[LEAF_MAX];$/;"	v	typeref:typename:leaf_type_handler[]
leaf_id	CommandParser/cmd_hier.h	/^    char leaf_id[LEAF_ID_SIZE];\/*Within a single command, it should be unique*\/$/;"	m	struct:leaf	typeref:typename:char[]
leaf_id	CommandParser/cmdtlv.h	/^    char leaf_id[LEAF_ID_SIZE];$/;"	m	struct:tlv_struct	typeref:typename:char[]
leaf_t	CommandParser/clistd.h	/^typedef struct leaf leaf_t;$/;"	t	typeref:struct:leaf
leaf_t	CommandParser/cmd_hier.h	/^} leaf_t;$/;"	t	typeref:struct:leaf
leaf_type	CommandParser/cmd_hier.h	/^    leaf_type_t leaf_type;$/;"	m	struct:leaf	typeref:typename:leaf_type_t
leaf_type	CommandParser/cmdtlv.h	/^    leaf_type_t leaf_type;$/;"	m	struct:tlv_struct	typeref:typename:leaf_type_t
leaf_type_handler	CommandParser/cmd_hier.h	/^typedef CLI_VAL_RC (*leaf_type_handler)(leaf_t *leaf, char *value_passed);$/;"	t	typeref:typename:CLI_VAL_RC (*)(leaf_t * leaf,char * value_passed)
leaf_type_t	CommandParser/libcliid.h	/^} leaf_type_t;$/;"	t	typeref:enum:__anon26ae4bf20203
left	CommandParser/gluethread/glthread.h	/^    struct _glthread *left;$/;"	m	struct:_glthread	typeref:struct:_glthread *
left	gluethread/glthread.h	/^	struct _glthread *left;$/;"	m	struct:_glthread	typeref:struct:_glthread *
libcli_get_clear_hook	CommandParser/cmd_hier.c	/^libcli_get_clear_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_cmd_expansion_param	CommandParser/cmd_hier.c	/^libcli_get_cmd_expansion_param(){$/;"	f	typeref:typename:param_t *
libcli_get_config_hook	CommandParser/cmd_hier.c	/^libcli_get_config_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_debug_hook	CommandParser/cmd_hier.c	/^libcli_get_debug_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_debug_show_hook	CommandParser/cmd_hier.c	/^libcli_get_debug_show_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_do_hook	CommandParser/cmd_hier.c	/^libcli_get_do_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_mode_param	CommandParser/cmd_hier.c	/^libcli_get_mode_param(){$/;"	f	typeref:typename:param_t *
libcli_get_repeat_hook	CommandParser/cmd_hier.c	/^libcli_get_repeat_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_root	CommandParser/cmd_hier.c	/^libcli_get_root(void){$/;"	f	typeref:typename:param_t *
libcli_get_run_hook	CommandParser/cmd_hier.c	/^libcli_get_run_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_show_brief_extension_param	CommandParser/cmd_hier.c	/^libcli_get_show_brief_extension_param(void){$/;"	f	typeref:typename:param_t *
libcli_get_show_hook	CommandParser/cmd_hier.c	/^libcli_get_show_hook(void){$/;"	f	typeref:typename:param_t *
libcli_get_suboptions_param	CommandParser/cmd_hier.c	/^libcli_get_suboptions_param(){$/;"	f	typeref:typename:param_t *
libcli_register_display_callback	CommandParser/cmd_hier.c	/^libcli_register_display_callback(param_t *param, $/;"	f	typeref:typename:void
libcli_register_param	CommandParser/cmd_hier.c	/^libcli_register_param(param_t *parent, param_t *child){$/;"	f	typeref:typename:void
link	graph.h	/^	struct link_ *link;$/;"	m	struct:interface_	typeref:struct:link_ *
link_	graph.h	/^struct link_ {$/;"	s
link_t	graph.h	/^typedef struct link_ link_t;$/;"	t	typeref:struct:link_
list_vlans	CommandParser/testapp.c	/^list_vlans(param_t *param, ser_buff_t *tlv_buf){$/;"	f	typeref:typename:void	file:
load_file_handler	CommandParser/clistd.c	/^load_file_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
mac	Layer2/l2switch.c	/^	mac_add_t mac;$/;"	m	struct:mac_table_entry_	typeref:typename:mac_add_t	file:
mac	net.h	/^	char mac[48];$/;"	m	struct:mac_add_	typeref:typename:char[48]
mac_add	net.h	/^	mac_add_t mac_add;			\/*Mac are hard burnt in interface NIC *\/$/;"	m	struct:intf_nw_prop_	typeref:typename:mac_add_t
mac_add_	net.h	/^typedef struct mac_add_ {$/;"	s
mac_add_t	net.h	/^} mac_add_t;$/;"	t	typeref:struct:mac_add_
mac_addr	Layer2/layer2.h	/^	mac_add_t mac_addr;$/;"	m	struct:arp_entry_	typeref:typename:mac_add_t
mac_entries	Layer2/l2switch.c	/^	glthread_t mac_entries;$/;"	m	struct:mac_table_	typeref:typename:glthread_t	file:
mac_entry_glue	Layer2/l2switch.c	/^	glthread_t mac_entry_glue;$/;"	m	struct:mac_table_entry_	typeref:typename:glthread_t	file:
mac_table	net.h	/^	mac_table_t *mac_table;$/;"	m	struct:node_nw_prop_	typeref:typename:mac_table_t *
mac_table_	Layer2/l2switch.c	/^typedef struct mac_table_{$/;"	s	file:
mac_table_entry_	Layer2/l2switch.c	/^typedef struct mac_table_entry_{$/;"	s	file:
mac_table_entry_add	Layer2/l2switch.c	/^mac_table_entry_add(mac_table_t *mac_table,$/;"	f	typeref:typename:bool_t
mac_table_entry_t	Layer2/l2switch.c	/^} mac_table_entry_t;$/;"	t	typeref:struct:mac_table_entry_	file:
mac_table_lookup	Layer2/l2switch.c	/^mac_table_lookup(mac_table_t *mac_table, char *mac){$/;"	f	typeref:typename:mac_table_entry_t *
mac_table_t	Layer2/l2switch.c	/^} mac_table_t;$/;"	t	typeref:struct:mac_table_	file:
mac_table_t	net.h	/^typedef struct mac_table_ mac_table_t;$/;"	t	typeref:struct:mac_table_
main	CommandParser/gluethread/test.c	/^int main(int argc, char **argv){$/;"	f	typeref:typename:int
main	CommandParser/main1.c	/^main(int argc, char **argv){$/;"	f	typeref:typename:int
main	CommandParser/main2.c	/^main(int argc, char **argv){$/;"	f	typeref:typename:int
main	CommandParser/main3.c	/^main(int argc, char **argv){$/;"	f	typeref:typename:int
main	CommandParser/main4.c	/^main(int argc, char **argv){$/;"	f	typeref:typename:int
main	CommandParser/testapp.c	/^main(int argc, char **argv){$/;"	f	typeref:typename:int
main	gluethread/test.c	/^int main(int argc, char **argv){$/;"	f	typeref:typename:int
main	testapp.c	/^int main(int argc, char **argv){$/;"	f	typeref:typename:int
mark_checkpoint_serialize_buffer	CommandParser/serialize.c	/^mark_checkpoint_serialize_buffer(ser_buff_t *b){$/;"	f	typeref:typename:void
mask	net.h	/^	char mask;$/;"	m	struct:intf_nw_prop_	typeref:typename:char
mode_enter_callback	CommandParser/clistd.c	/^mode_enter_callback(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
mode_param	CommandParser/cmd_hier.c	/^static param_t mode_param;$/;"	v	typeref:typename:param_t	file:
mq_wait_time	CommandParser/ut/utinfra/ut_parser.c	/^static struct timespec mq_wait_time;$/;"	v	typeref:struct:timespec	file:
mtrace_handler	CommandParser/testapp.c	/^mtrace_handler(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
negate_callback	CommandParser/clistd.c	/^negate_callback(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
net.o	Makefile	/^net.o:net.c$/;"	t
network_start_pkt_receiver_thread	comm.c	/^network_start_pkt_receiver_thread(graph_t *topo){$/;"	f	typeref:typename:void
next	CommandParser/serialize.h	/^    int next;$/;"	m	struct:serialized_buffer	typeref:typename:int
node_	graph.h	/^struct node_ {$/;"	s
node_callback_handler	CommandParser/main2.c	/^node_callback_handler(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
node_callback_handler	CommandParser/main3.c	/^node_callback_handler(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
node_callback_handler	CommandParser/main4.c	/^node_callback_handler(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
node_get_matching_subnet_interface	net.c	/^node_get_matching_subnet_interface(node_t *node, char *ip_addr){$/;"	f	typeref:typename:interface_t *
node_list	graph.h	/^	glthread_t node_list;$/;"	m	struct:graph_	typeref:typename:glthread_t
node_loopback_callback_handler	CommandParser/main2.c	/^node_loopback_callback_handler(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
node_loopback_callback_handler	CommandParser/main3.c	/^node_loopback_callback_handler(param_t *param, $/;"	f	typeref:typename:int
node_loopback_callback_handler	CommandParser/main4.c	/^node_loopback_callback_handler(param_t *param, $/;"	f	typeref:typename:int
node_name	graph.h	/^	char node_name[NODE_NAME_SIZE];$/;"	m	struct:node_	typeref:typename:char[]
node_nw_prop_	net.h	/^typedef struct node_nw_prop_ {$/;"	s
node_nw_prop_t	net.h	/^} node_nw_prop_t;$/;"	t	typeref:struct:node_nw_prop_
node_nw_props	graph.h	/^	node_nw_prop_t node_nw_props;$/;"	m	struct:node_	typeref:typename:node_nw_prop_t
node_set_intf_ip_address	net.c	/^bool_t node_set_intf_ip_address(node_t *node, char *local_if,$/;"	f	typeref:typename:bool_t
node_set_intf_l2_mode	Layer2/layer2.c	/^node_set_intf_l2_mode(node_t *node, char *intf_name,$/;"	f	typeref:typename:void
node_set_loopback_address	net.c	/^bool_t node_set_loopback_address(node_t *node, char *ip_addr){$/;"	f	typeref:typename:bool_t
node_t	graph.h	/^typedef struct node_ node_t;$/;"	t	typeref:struct:node_
node_t	net.h	/^typedef struct node_ node_t;$/;"	t	typeref:struct:node_
node_unset_intf_ip_address	net.c	/^bool_t node_unset_intf_ip_address(node_t *node, char *local_if){$/;"	f	typeref:typename:bool_t
none	CommandParser/cliconst.h	/^    none$/;"	e	enum:__anondcf10b350103
nw_init_cli	nwcli.c	/^nw_init_cli(){$/;"	f	typeref:typename:void
nwcli.o	Makefile	/^nwcli.o:nwcli.c$/;"	t
offset	CommandParser/gluethread/test.c	/^#define offset(/;"	d	file:
offset	gluethread/test.c	/^#define offset(/;"	d	file:
oif_name	Layer2/l2switch.c	/^	char oif_name [IF_NAME_SIZE];$/;"	m	struct:mac_table_entry_	typeref:typename:char[]	file:
oif_name	Layer2/layer2.h	/^	char oif_name[IF_NAME_SIZE];$/;"	m	struct:arp_entry_	typeref:typename:char[]
op_code	Layer2/layer2.h	/^	short op_code;			\/* 1:req 2:reply*\/$/;"	m	struct:arp_hdr_	typeref:typename:short
op_mode	CommandParser/libcliid.h	/^} op_mode;$/;"	t	typeref:enum:__anon26ae4bf20103
options	CommandParser/cmd_hier.h	/^    param_t *options[MAX_OPTION_SIZE];$/;"	m	struct:_param_t_	typeref:typename:param_t * []
param_t	CommandParser/clistd.h	/^typedef struct _param_t_ param_t;$/;"	t	typeref:struct:_param_t_
param_t	CommandParser/cmd_hier.h	/^typedef struct _param_t_ param_t;$/;"	t	typeref:struct:_param_t_
param_type	CommandParser/cmd_hier.h	/^    param_type_t param_type;$/;"	m	struct:_param_t_	typeref:typename:param_type_t
param_type_t	CommandParser/cmd_hier.h	/^} param_type_t;$/;"	t	typeref:enum:__anon6f8514110103
parent	CommandParser/cmd_hier.h	/^    param_t *parent;$/;"	m	struct:_param_t_	typeref:typename:param_t *
parse_file	CommandParser/parser.c	/^parse_file(char *file_name) {$/;"	f	typeref:typename:void
parse_input_cmd	CommandParser/parser.c	/^parse_input_cmd(char *input, unsigned int len, bool *is_repeat_cmd){$/;"	f	typeref:typename:CMD_PARSE_STATUS
parser.o	CommandParser/Makefile	/^parser.o:parser.c$/;"	t
parser_match_leaf_id	CommandParser/cmdtlv.h	/^parser_match_leaf_id (char *tlv_leaf_id, const char *leaf_id_manual) {$/;"	f	typeref:typename:bool
parser_process_repeat_cmd	CommandParser/parser.c	/^parser_process_repeat_cmd(char *next_token) {$/;"	f	typeref:typename:void	file:
pass	CommandParser/ut/utinfra/ut_parser.c	/^    bool pass;$/;"	m	struct:tc_result_	typeref:typename:bool	file:
pattern_match	CommandParser/string_util.c	/^pattern_match(char string[], int string_size, char pattern[]) {$/;"	f	typeref:typename:bool
pattern_match	CommandParser/ut/utinfra/ut_parser.c	/^    bool pattern_match;$/;"	m	struct:tc_result_	typeref:typename:bool	file:
payload	Layer2/layer2.h	/^	char payload[248];  \/*가변길이라고 가정(최대 1500byte)*\/$/;"	m	struct:ethernet_hdr_	typeref:typename:char[248]
person_t	CommandParser/gluethread/test.c	/^} person_t ;$/;"	t	typeref:struct:_person	file:
person_t	gluethread/test.c	/^} person_t;$/;"	t	typeref:struct:_person	file:
pipe_handler	CommandParser/clistd.c	/^pipe_handler (param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
pkt_buffer_shift_right	net.c	/^pkt_buffer_shift_right(char *pkt, unsigned int pkt_size,$/;"	f	typeref:typename:char *
pkt_receive	comm.c	/^pkt_receive(node_t *node, interface_t *interface, char *pkt, unsigned int pkt_size){$/;"	f	typeref:typename:int
place_console	CommandParser/parser.c	/^place_console(char new_line){$/;"	f	typeref:typename:void
prepare_tlv_from_leaf	CommandParser/cmdtlv.h	/^#define prepare_tlv_from_leaf(/;"	d
print_buffer_details	CommandParser/serialize.c	/^void print_buffer_details(ser_buff_t *b, const char *fn, int lineno){$/;"	f	typeref:typename:void
print_tlv_content	CommandParser/cmdtlv.h	/^print_tlv_content(tlv_struct_t *tlv){$/;"	f	typeref:typename:void
print_tokens	CommandParser/string_util.c	/^print_tokens(unsigned int index){$/;"	f	typeref:typename:void
process_arp_broadcast_request	Layer2/layer2.c	/^process_arp_broadcast_request(node_t *node, interface_t *iif,$/;"	f	typeref:typename:void	file:
process_arp_reply_msg	Layer2/layer2.c	/^process_arp_reply_msg(node_t *node, interface_t *iif,$/;"	f	typeref:typename:void	file:
proto_addr_len	Layer2/layer2.h	/^	char proto_addr_len;	\/* 4byte IPV4 *\/$/;"	m	struct:arp_hdr_	typeref:typename:char
proto_type	Layer2/layer2.h	/^	short proto_type;		\/* 0x800 : IPV4 *\/$/;"	m	struct:arp_hdr_	typeref:typename:short
put_value_in_tlv	CommandParser/cmdtlv.h	/^#define put_value_in_tlv(/;"	d
re_init_tokens	CommandParser/string_util.c	/^re_init_tokens(int token_cnt){$/;"	f	typeref:typename:void
record_command	CommandParser/clistd.c	/^record_command(char *hist_file, char *cons_input_buffer, unsigned int cmd_len){$/;"	f	typeref:typename:void
recv_buffer	comm.c	/^static char recv_buffer[MAX_PACKET_BUFFER_SIZE];$/;"	v	typeref:typename:char[]	file:
remove_glthread	CommandParser/gluethread/glthread.c	/^remove_glthread(glthread_t *curr_glthread){$/;"	f	typeref:typename:void
remove_glthread	gluethread/glthread.c	/^remove_glthread(glthread_t *curr_glthread){$/;"	f	typeref:typename:void
repeat	CommandParser/cmd_hier.c	/^static param_t repeat;$/;"	v	typeref:typename:param_t	file:
repeat_last_command	CommandParser/clistd.c	/^repeat_last_command(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
replaceSubstring	CommandParser/string_util.c	/^void replaceSubstring(char string[], char sub[], char new_str[])$/;"	f	typeref:typename:void
reset_cmd_tree_cursor	CommandParser/cmd_hier.c	/^reset_cmd_tree_cursor(){$/;"	f	typeref:typename:void
reset_serialize_buffer	CommandParser/serialize.c	/^void reset_serialize_buffer(ser_buff_t *b){$/;"	f	typeref:typename:void
restore_checkpoint_serialize_buffer	CommandParser/serialize.c	/^restore_checkpoint_serialize_buffer(ser_buff_t *b){$/;"	f	typeref:typename:void
right	CommandParser/gluethread/glthread.h	/^    struct _glthread *right;$/;"	m	struct:_glthread	typeref:struct:_glthread *
right	gluethread/glthread.h	/^	struct _glthread *right;$/;"	m	struct:_glthread	typeref:struct:_glthread *
root	CommandParser/cmd_hier.c	/^static param_t root;$/;"	v	typeref:typename:param_t	file:
run	CommandParser/cmd_hier.c	/^static param_t run;$/;"	v	typeref:typename:param_t	file:
run_test_case	CommandParser/ut/utinfra/ut_parser.c	/^run_test_case(char *file_name, uint16_t tc_no) {$/;"	f	typeref:typename:bool
send_arp_broadcast_request	Layer2/layer2.c	/^send_arp_broadcast_request(node_t *node,$/;"	f	typeref:typename:void
send_arp_reply_msg	Layer2/layer2.c	/^send_arp_reply_msg(ethernet_hdr_t *ethernet_hdr_in, interface_t *oif){$/;"	f	typeref:typename:void	file:
send_buffer	comm.c	/^static char send_buffer[MAX_PACKET_BUFFER_SIZE];$/;"	v	typeref:typename:char[]	file:
send_pkt_flood	comm.c	/^send_pkt_flood (node_t *node, interface_t *exempted_intf, char *pkt, unsigned int pkt_size){$/;"	f	typeref:typename:int
send_pkt_flood_l2_intf_only	comm.c	/^send_pkt_flood_l2_intf_only(node_t *node,$/;"	f	typeref:typename:int
send_pkt_out	comm.c	/^send_pkt_out(char *pkt, unsigned int pkt_size,$/;"	f	typeref:typename:int
senior_citizen	CommandParser/gluethread/test.c	/^senior_citizen(person_t *p1, person_t *p2){$/;"	f	typeref:typename:int
senior_citizen	gluethread/test.c	/^senior_citizen(person_t *p1, person_t *p2){$/;"	f	typeref:typename:int
ser_buff_t	CommandParser/clistd.h	/^typedef struct serialized_buffer ser_buff_t;$/;"	t	typeref:struct:serialized_buffer
ser_buff_t	CommandParser/cmd_hier.h	/^typedef struct serialized_buffer ser_buff_t;$/;"	t	typeref:struct:serialized_buffer
ser_buff_t	CommandParser/serialize.h	/^} ser_buff_t;$/;"	t	typeref:struct:serialized_buffer
serialize.o	CommandParser/Makefile	/^serialize.o:serialize.c$/;"	t
serialize_buffer_skip	CommandParser/serialize.c	/^serialize_buffer_skip(ser_buff_t *b, int size){$/;"	f	typeref:typename:void
serialize_double	CommandParser/serialize.c	/^void serialize_double(ser_buff_t *b, double data){$/;"	f	typeref:typename:void
serialize_float	CommandParser/serialize.c	/^void serialize_float(ser_buff_t *b, float data){$/;"	f	typeref:typename:void
serialize_int	CommandParser/serialize.c	/^void serialize_int(ser_buff_t *b, int data){$/;"	f	typeref:typename:void
serialize_int32	CommandParser/serialize.c	/^void serialize_int32(ser_buff_t *b, int data){$/;"	f	typeref:typename:void
serialize_int8	CommandParser/serialize.c	/^void serialize_int8(ser_buff_t *b, char data){$/;"	f	typeref:typename:void
serialize_primitive	CommandParser/serialize.h	/^#define serialize_primitive(/;"	d
serialize_string	CommandParser/serialize.c	/^void serialize_string(ser_buff_t *b, char *data, int nbytes){$/;"	f	typeref:typename:void
serialize_uint32	CommandParser/serialize.c	/^void serialize_uint32(ser_buff_t *b, unsigned int data){$/;"	f	typeref:typename:void
serialize_uint8	CommandParser/serialize.c	/^void serialize_uint8(ser_buff_t *b, char data){$/;"	f	typeref:typename:void
serialized_buffer	CommandParser/serialize.h	/^typedef struct serialized_buffer{$/;"	s
set_cmd_tree_cursor	CommandParser/cmd_hier.c	/^set_cmd_tree_cursor(param_t *param){$/;"	f	typeref:typename:void
set_device_name	CommandParser/cmd_hier.c	/^set_device_name(const char *cons_name){$/;"	f	typeref:typename:void
set_param_cmd_code	CommandParser/cmd_hier.c	/^set_param_cmd_code(param_t *param, int cmd_code){$/;"	f	typeref:typename:void
set_ut_debug_flag	CommandParser/ut/utinfra/ut_parser.c	/^set_ut_debug_flag(char * ut_enable_flag) {$/;"	f	typeref:typename:void	file:
show	CommandParser/cmd_hier.c	/^static param_t show;$/;"	v	typeref:typename:param_t	file:
show_arp_handler	nwcli.c	/^show_arp_handler(param_t *param, ser_buff_t *tlv_buf,$/;"	f	typeref:typename:int	file:
show_brief_extension	CommandParser/cmd_hier.c	/^static param_t show_brief_extension;$/;"	v	typeref:typename:param_t	file:
show_cmd_tree	CommandParser/clistd.c	/^show_cmd_tree(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
show_ext_t	CommandParser/cliconst.h	/^} show_ext_t;$/;"	t	typeref:enum:__anondcf10b350103
show_extension_param_handler	CommandParser/clistd.c	/^show_extension_param_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
show_help_handler	CommandParser/clistd.c	/^show_help_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
show_history_callback	CommandParser/clistd.c	/^show_history_callback(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
show_ip_igmp_groups_handler	CommandParser/testapp.c	/^show_ip_igmp_groups_handler(param_t *param, ser_buff_t *tlv_buf, op_mode enable_or_disable){$/;"	f	typeref:typename:int
show_mac_handler	nwcli.c	/^show_mac_handler(param_t *param, ser_buff_t *tlv_buf,$/;"	f	typeref:typename:int	file:
show_nw_topology_handler	nwcli.c	/^show_nw_topology_handler(param_t *param, ser_buff_t *tlv_buf,$/;"	f	typeref:typename:int	file:
show_resgistered_cmd_handler	CommandParser/clistd.c	/^show_resgistered_cmd_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
size	CommandParser/serialize.h	/^    int size;$/;"	m	struct:serialized_buffer	typeref:typename:int
src_ip	Layer2/layer2.h	/^	unsigned int src_ip;$/;"	m	struct:arp_hdr_	typeref:typename:unsigned int
src_mac	Layer2/layer2.h	/^	mac_add_t src_mac;		\/* MAC address *\/$/;"	m	struct:arp_hdr_	typeref:typename:mac_add_t
src_mac	Layer2/layer2.h	/^	mac_add_t src_mac;$/;"	m	struct:ethernet_hdr_	typeref:typename:mac_add_t
start_shell	CommandParser/cmd_hier.c	/^start_shell(void){$/;"	f	typeref:typename:void
step_no	CommandParser/ut/utinfra/ut_parser.c	/^    uint16_t step_no;$/;"	m	struct:tc_result_	typeref:typename:uint16_t	file:
string_fetch_integer	CommandParser/string_util.c	/^string_fetch_integer(char *string, int string_size, int index) {$/;"	f	typeref:typename:uint64_t
string_space_trim	CommandParser/string_util.c	/^string_space_trim(char *string){$/;"	f	typeref:typename:void
string_util.o	CommandParser/Makefile	/^string_util.o:string_util.c$/;"	t
string_validation_handler	CommandParser/clistd.c	/^string_validation_handler(leaf_t *leaf, char *value_passed){$/;"	f	typeref:typename:CLI_VAL_RC
suboptions_param	CommandParser/cmd_hier.c	/^static param_t suboptions_param;$/;"	v	typeref:typename:param_t	file:
support_cmd_negation	CommandParser/cmd_hier.c	/^support_cmd_negation(param_t *param){$/;"	f	typeref:typename:void
supportsave_handler	CommandParser/clistd.c	/^supportsave_handler(param_t *param, ser_buff_t *b, op_mode enable_or_disable){$/;"	f	typeref:typename:int
swap_tlv_units	CommandParser/cmdtlv.h	/^swap_tlv_units(tlv_struct_t *tlv1, tlv_struct_t *tlv2){$/;"	f	typeref:typename:void
tc_append_result	CommandParser/ut/utinfra/ut_parser.c	/^tc_append_result(glthread_t *head, uint16_t step_no, bool pass, bool match) {$/;"	f	typeref:typename:void	file:
tc_cleanup_result_list	CommandParser/ut/utinfra/ut_parser.c	/^tc_cleanup_result_list(glthread_t *result_head) {$/;"	f	typeref:typename:void	file:
tc_print_result	CommandParser/ut/utinfra/ut_parser.c	/^tc_print_result (glthread_t *head) {$/;"	f	typeref:typename:void	file:
tc_result_	CommandParser/ut/utinfra/ut_parser.c	/^typedef struct tc_result_ {$/;"	s	file:
tc_result_t	CommandParser/ut/utinfra/ut_parser.c	/^} tc_result_t;$/;"	t	typeref:struct:tc_result_	file:
temp	CommandParser/string_util.c	/^char temp[ LEAF_ID_SIZE + 2];$/;"	v	typeref:typename:char[]
terminate_signal_handler	CommandParser/clicbext.c	/^terminate_signal_handler(){$/;"	f	typeref:typename:void
test.exe	Makefile	/^test.exe:testapp.o ${OBJS} CommandParser\/libcli.a$/;"	t
test.o	gluethread/Makefile	/^test.o:test.c$/;"	t
testapp.o	CommandParser/Makefile	/^testapp.o:testapp.c$/;"	t
tlv	CommandParser/parser.c	/^static tlv_struct_t tlv;$/;"	v	typeref:typename:tlv_struct_t	file:
tlv_buff	CommandParser/cmd_hier.c	/^ser_buff_t *tlv_buff;$/;"	v	typeref:typename:ser_buff_t *
tlv_copy_leaf_id	CommandParser/cmdtlv.h	/^#define tlv_copy_leaf_id(/;"	d
tlv_copy_leaf_value	CommandParser/cmdtlv.h	/^#define tlv_copy_leaf_value(/;"	d
tlv_struct	CommandParser/cmdtlv.h	/^typedef struct tlv_struct{$/;"	s
tlv_struct_t	CommandParser/cmdtlv.h	/^} tlv_struct_t;$/;"	t	typeref:struct:tlv_struct
tokenize	CommandParser/string_util.c	/^tokenize(char *token, unsigned int size, unsigned int index){$/;"	f	typeref:typename:void
tokenizer	CommandParser/string_util.c	/^char** tokenizer(char* _a_str, const char a_delim, size_t *token_cnt){$/;"	f	typeref:typename:char **
tokens	CommandParser/string_util.c	/^static char * tokens[MAX_CMD_TREE_DEPTH];$/;"	v	typeref:typename:char * []	file:
topo	testapp.c	/^graph_t *topo = NULL;$/;"	v	typeref:typename:graph_t *
topologies.o	Makefile	/^topologies.o:topologies.c$/;"	t
topology_name	graph.h	/^	char topology_name[32];$/;"	m	struct:graph_	typeref:typename:char[32]
truncate_serialize_buffer	CommandParser/serialize.c	/^void truncate_serialize_buffer(ser_buff_t **b){$/;"	f	typeref:typename:void
type	Layer2/layer2.h	/^	unsigned short type;$/;"	m	struct:ethernet_hdr_	typeref:typename:unsigned short
udp_port_number	comm.c	/^static unsigned int udp_port_number = 40000;$/;"	v	typeref:typename:unsigned int	file:
udp_port_number	graph.h	/^	unsigned int udp_port_number;$/;"	m	struct:node_	typeref:typename:unsigned int
udp_sock_fd	graph.h	/^	int udp_sock_fd;$/;"	m	struct:node_	typeref:typename:int
uninstall	CommandParser/Makefile	/^uninstall:$/;"	t
untokenize	CommandParser/string_util.c	/^untokenize(unsigned int index){$/;"	f	typeref:typename:void
user_validation_callback	CommandParser/cmd_hier.h	/^typedef int (*user_validation_callback)(char *leaf_value);$/;"	t	typeref:typename:int (*)(char * leaf_value)
user_validation_cb_fn	CommandParser/cmd_hier.h	/^    user_validation_callback user_validation_cb_fn;$/;"	m	struct:leaf	typeref:typename:user_validation_callback
user_vlan_validation_callback	CommandParser/testapp.c	/^user_vlan_validation_callback(char *vlan_id){$/;"	f	typeref:typename:int
ut/utinfra/ut_parser.o	CommandParser/Makefile	/^ut\/utinfra\/ut_parser.o:ut\/utinfra\/ut_parser.c$/;"	t
ut_log_file	CommandParser/ut/utinfra/ut_parser.c	/^static FILE *ut_log_file = NULL;$/;"	v	typeref:typename:FILE *	file:
ut_parser_debug	CommandParser/ut/utinfra/ut_parser.c	/^static bool ut_parser_debug = false;$/;"	v	typeref:typename:bool	file:
ut_parser_init	CommandParser/ut/utinfra/ut_parser.c	/^ut_parser_init ( ) {$/;"	f	typeref:typename:void
ut_parser_recv_buff	CommandParser/ut/utinfra/ut_parser.c	/^static char ut_parser_recv_buff[UT_PARSER_BUFF_MAX_SIZE];$/;"	v	typeref:typename:char[]	file:
ut_parser_recv_buff_data_size	CommandParser/ut/utinfra/ut_parser.c	/^static int ut_parser_recv_buff_data_size;$/;"	v	typeref:typename:int	file:
ut_test_handler	CommandParser/ut/utinfra/ut_parser.c	/^ut_test_handler (param_t *param, $/;"	f	typeref:typename:int
utils.o	Makefile	/^utils.o:utils.c$/;"	t
validate_loopback_address	CommandParser/main2.c	/^validate_loopback_address(char *value){$/;"	f	typeref:typename:int
validate_loopback_address	CommandParser/main3.c	/^validate_loopback_address(char *value){$/;"	f	typeref:typename:int
validate_loopback_address	CommandParser/main4.c	/^validate_loopback_address(char *value){$/;"	f	typeref:typename:int
validate_node_extistence	nwcli.c	/^validate_node_extistence(char *node_name){$/;"	f	typeref:typename:int
validate_node_name	CommandParser/main2.c	/^validate_node_name(char *value){$/;"	f	typeref:typename:int
validate_node_name	CommandParser/main3.c	/^validate_node_name(char *value){$/;"	f	typeref:typename:int
validate_node_name	CommandParser/main4.c	/^validate_node_name(char *value){$/;"	f	typeref:typename:int
value	CommandParser/cmdtlv.h	/^    char value[LEAF_VALUE_HOLDER_SIZE];$/;"	m	struct:tlv_struct	typeref:typename:char[]
value_holder	CommandParser/cmd_hier.h	/^    char value_holder[LEAF_VALUE_HOLDER_SIZE];$/;"	m	struct:leaf	typeref:typename:char[]
vlans	net.h	/^	unsigned int vlans[MAX_VLAN_MEMBERSHIP]; \/*If the interface operating int Trunk mode, it can b/;"	m	struct:intf_nw_prop_	typeref:typename:unsigned int[]
weight	CommandParser/gluethread/test.c	/^    int weight;$/;"	m	struct:_person	typeref:typename:int	file:
weight	gluethread/test.c	/^	int weight;$/;"	m	struct:_person	typeref:typename:int	file:
